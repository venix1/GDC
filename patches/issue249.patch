diff -r 0d65aed46422 d/d-lang.cc
--- a/d/d-lang.cc	Wed Oct 26 00:39:46 2011 +0100
+++ b/d/d-lang.cc	Wed Oct 26 20:25:12 2011 +0100
@@ -798,14 +798,41 @@
 }
 
 static void
+d_wrapup_global_declarations (tree *vec, int len)
+{
+    /* Register all global functions with cgraph.  For methods in nested
+       classes/structs, fix cgraph origin to point to decl function context.  */
+    for (size_t i = 0; i < len; i++)
+    {
+        tree decl = vec[i];
+
+        if (TREE_CODE(decl) != VAR_DECL)
+        {
+            struct cgraph_node * node = cgraph_node (decl);
+            gcc_assert(node);
+
+            tree context = decl_function_context (decl);
+            if (context && TREE_CODE(DECL_CONTEXT(decl)) != FUNCTION_DECL)
+            {
+                node->origin = cgraph_node (context);
+                node->next_nested = node->origin->nested;
+                node->origin->nested = node;
+            }
+        }
+    }
+
+    wrapup_global_declarations(vec, globalDeclarations.dim);
+    check_global_declarations(vec, globalDeclarations.dim);
+}
+
+static void
 d_write_global_declarations()
 {
     tree * vec = (tree *) globalDeclarations.data;
 
     /* Process all file scopes in this compilation, and the external_scope,
        through wrapup_global_declarations and check_global_declarations.  */
-    wrapup_global_declarations(vec, globalDeclarations.dim);
-    check_global_declarations(vec, globalDeclarations.dim);
+    d_wrapup_global_declarations(vec, globalDeclarations.dim);
 
 #if D_GCC_VER >= 45
     /* We're done parsing; proceed to optimize and emit assembly. */
diff -r 0d65aed46422 d/patches/patch-gcc-4.2.x
--- a/d/patches/patch-gcc-4.2.x	Wed Oct 26 00:39:46 2011 +0100
+++ b/d/patches/patch-gcc-4.2.x	Wed Oct 26 20:25:12 2011 +0100
@@ -1,35 +1,3 @@
---- gcc.orig/cgraph.c	2007-09-01 16:28:30.000000000 +0100
-+++ gcc/cgraph.c	2011-07-24 13:34:43.892108427 +0100
-@@ -198,6 +198,7 @@ struct cgraph_node *
- cgraph_node (tree decl)
- {
-   struct cgraph_node key, *node, **slot;
-+  tree context;
- 
-   gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);
- 
-@@ -219,12 +220,16 @@ cgraph_node (tree decl)
-   node = cgraph_create_node ();
-   node->decl = decl;
-   *slot = node;
--  if (DECL_CONTEXT (decl) && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL)
-+  if (!DECL_NO_STATIC_CHAIN (decl))
-     {
--      node->origin = cgraph_node (DECL_CONTEXT (decl));
--      node->next_nested = node->origin->nested;
--      node->origin->nested = node;
--      node->master_clone = node;
-+      context = decl_function_context (decl);
-+      if (context)
-+        {
-+	  node->origin = cgraph_node (context);
-+	  node->next_nested = node->origin->nested;
-+	  node->origin->nested = node;
-+	  node->master_clone = node;
-+        }
-     }
-   return node;
- }
 --- gcc.orig/config/arm/arm.c	2007-09-01 16:28:30.000000000 +0100
 +++ gcc/config/arm/arm.c	2011-07-24 13:34:43.908108501 +0100
 @@ -15485,6 +15485,15 @@ arm_unwind_emit_set (FILE * asm_out_file
diff -r 0d65aed46422 d/patches/patch-gcc-4.3.x
--- a/d/patches/patch-gcc-4.3.x	Wed Oct 26 00:39:46 2011 +0100
+++ b/d/patches/patch-gcc-4.3.x	Wed Oct 26 20:25:12 2011 +0100
@@ -1,35 +1,3 @@
---- gcc.orig/cgraph.c	2010-08-20 18:07:17.979440836 +0100
-+++ gcc/cgraph.c	2010-08-20 18:08:05.728441136 +0100
-@@ -181,6 +181,7 @@ struct cgraph_node *
- cgraph_node (tree decl)
- {
-   struct cgraph_node key, *node, **slot;
-+  tree context;
- 
-   gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);
- 
-@@ -202,12 +203,16 @@ cgraph_node (tree decl)
-   node = cgraph_create_node ();
-   node->decl = decl;
-   *slot = node;
--  if (DECL_CONTEXT (decl) && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL)
-+  if (!DECL_NO_STATIC_CHAIN (decl))
-     {
--      node->origin = cgraph_node (DECL_CONTEXT (decl));
--      node->next_nested = node->origin->nested;
--      node->origin->nested = node;
--      node->master_clone = node;
-+      context = decl_function_context (decl);
-+      if (context)
-+        {
-+	  node->origin = cgraph_node (context);
-+	  node->next_nested = node->origin->nested;
-+	  node->origin->nested = node;
-+	  node->master_clone = node;
-+        }
-     }
-   return node;
- }
 --- gcc.orig/config/i386/i386.c	2010-08-20 18:07:18.079444473 +0100
 +++ gcc/config/i386/i386.c	2011-07-24 14:27:02.959674225 +0100
 @@ -3149,6 +3149,10 @@ ix86_handle_cconv_attribute (tree *node,
diff -r 0d65aed46422 d/patches/patch-gcc-4.4.x
--- a/d/patches/patch-gcc-4.4.x	Wed Oct 26 00:39:46 2011 +0100
+++ b/d/patches/patch-gcc-4.4.x	Wed Oct 26 20:25:12 2011 +0100
@@ -1,35 +1,3 @@
---- gcc.orig/cgraph.c	2011-07-12 22:58:59.004152166 +0100
-+++ gcc/cgraph.c	2011-07-12 23:19:00.918112133 +0100
-@@ -451,6 +451,7 @@ struct cgraph_node *
- cgraph_node (tree decl)
- {
-   struct cgraph_node key, *node, **slot;
-+  tree context;
- 
-   gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);
- 
-@@ -472,12 +473,16 @@ cgraph_node (tree decl)
-   node = cgraph_create_node ();
-   node->decl = decl;
-   *slot = node;
--  if (DECL_CONTEXT (decl) && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL)
-+  if (!DECL_NO_STATIC_CHAIN (decl))
-     {
--      node->origin = cgraph_node (DECL_CONTEXT (decl));
--      node->next_nested = node->origin->nested;
--      node->origin->nested = node;
--      node->master_clone = node;
-+      context = decl_function_context (decl);
-+      if (context)
-+	{
-+	  node->origin = cgraph_node (context);
-+	  node->next_nested = node->origin->nested;
-+	  node->origin->nested = node;
-+	  node->master_clone = node;
-+	}
-     }
-   if (assembler_name_hash)
-     {
 --- gcc.orig/config/i386/i386.c	2011-07-12 22:58:59.136152820 +0100
 +++ gcc/config/i386/i386.c	2011-07-24 14:30:14.440623725 +0100
 @@ -4268,6 +4268,10 @@ ix86_handle_cconv_attribute (tree *node,
diff -r 0d65aed46422 d/patches/patch-gcc-4.5.x
--- a/d/patches/patch-gcc-4.5.x	Wed Oct 26 00:39:46 2011 +0100
+++ b/d/patches/patch-gcc-4.5.x	Wed Oct 26 20:25:12 2011 +0100
@@ -1,33 +1,3 @@
---- gcc.orig/cgraph.c	2010-07-01 12:03:31.000000000 +0100
-+++ gcc/cgraph.c	2011-03-22 00:31:28.341349775 +0000
-@@ -464,6 +464,7 @@ struct cgraph_node *
- cgraph_node (tree decl)
- {
-   struct cgraph_node key, *node, **slot;
-+  tree context;
- 
-   gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);
- 
-@@ -485,11 +486,15 @@ cgraph_node (tree decl)
-   node = cgraph_create_node ();
-   node->decl = decl;
-   *slot = node;
--  if (DECL_CONTEXT (decl) && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL)
-+  if (DECL_STATIC_CHAIN (decl))
-     {
--      node->origin = cgraph_node (DECL_CONTEXT (decl));
--      node->next_nested = node->origin->nested;
--      node->origin->nested = node;
-+      context = decl_function_context (decl);
-+      if (context)
-+	{
-+	  node->origin = cgraph_node (context);
-+	  node->next_nested = node->origin->nested;
-+	  node->origin->nested = node;
-+	}
-     }
-   if (assembler_name_hash)
-     {
 --- gcc.orig/config/i386/i386.c	2010-09-30 21:24:54.000000000 +0100
 +++ gcc/config/i386/i386.c	2011-07-24 12:50:17.370885866 +0100
 @@ -4466,6 +4466,10 @@ ix86_handle_cconv_attribute (tree *node,
diff -r 0d65aed46422 d/patches/patch-gcc-4.6.x
--- a/d/patches/patch-gcc-4.6.x	Wed Oct 26 00:39:46 2011 +0100
+++ b/d/patches/patch-gcc-4.6.x	Wed Oct 26 20:25:12 2011 +0100
@@ -1,33 +1,3 @@
---- gcc.orig/cgraph.c	2011-03-04 18:49:23.000000000 +0000
-+++ gcc/cgraph.c	2011-07-09 20:25:16.517533109 +0100
-@@ -491,6 +491,7 @@ struct cgraph_node *
- cgraph_node (tree decl)
- {
-   struct cgraph_node key, *node, **slot;
-+  tree context;
- 
-   gcc_assert (TREE_CODE (decl) == FUNCTION_DECL);
- 
-@@ -512,11 +513,15 @@ cgraph_node (tree decl)
-   node = cgraph_create_node ();
-   node->decl = decl;
-   *slot = node;
--  if (DECL_CONTEXT (decl) && TREE_CODE (DECL_CONTEXT (decl)) == FUNCTION_DECL)
-+  if (DECL_STATIC_CHAIN (decl))
-     {
--      node->origin = cgraph_node (DECL_CONTEXT (decl));
--      node->next_nested = node->origin->nested;
--      node->origin->nested = node;
-+      context = decl_function_context (decl);
-+      if (context)
-+	{
-+	  node->origin = cgraph_node (context);
-+	  node->next_nested = node->origin->nested;
-+	  node->origin->nested = node;
-+	}
-     }
-   if (assembler_name_hash)
-     {
 --- gcc.orig/config/i386/i386.c	2011-03-04 17:56:39.000000000 +0000
 +++ gcc/config/i386/i386.c	2011-07-24 12:47:54.466177239 +0100
 @@ -5358,6 +5358,10 @@ ix86_handle_cconv_attribute (tree *node,
